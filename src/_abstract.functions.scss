
@import "abstract.variables";

// Unpacking function used in position() mixin
// By bourbon.io (MIT license).
@function unpack($shorthand) {
  @if length($shorthand)==1 {
    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);
  }
  @else if length($shorthand)==2 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);
  }
  @else if length($shorthand)==3 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);
  }
  @else {
    @return $shorthand;
  }
}


// Function for writing values in pixels and get output in ems.
@function em($font-px, $base: $base-font-size) {
  @return #{$font-px/$base}em;
}


// Match tracking values from Adobe Photoshop to em value.
// To be used with letter-spacing property.
@function track($val) {
  @return #{$val/1000}em;
}


// Returns value from nested Sass map.
// By Hugo Giraudel (reference: https://hugogiraudel.com/2013/08/12/sass-functions/)
@function match($haystack, $needle) {
  @each $item in $haystack {
    $index: index($item, $needle);
    @if $index {
      $return: if($index==1, 2, $index);
      @return nth($item, $return);
    }
  }
  @return false;
}


// Returns z-index value from Sass map.
// By Hugo Giraudel (reference: https://www.sitepoint.com/better-solution-managing-z-index-sass/)
@function z($layer) {
  $z-layers: () !default;
  @if not map-has-key($z-layers, $layer) {
    @warn "No layer found for `#{$layer}` in $z-layers map. Property omitted.";
  }
  @return map-get($z-layers, $layer);
}
